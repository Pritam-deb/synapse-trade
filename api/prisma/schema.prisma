// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders     Order[]
  trades     Trade[]
  wallets    Wallet[]
  sessions   Session[]
}

model Session {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Wallet {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  asset     String
  available Float    @default(0)
  locked    Float    @default(0)

  @@unique([userId, asset])
}

model Order {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  market       String
  side         String
  price        Float
  quantity     Float
  executedQty  Float    @default(0)
  status       String   @default("open")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  trades       Trade[]
}

model Trade {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?
  market    String
  side      String
  price     Float
  quantity  Float
  isMaker   Boolean
  createdAt DateTime @default(now())
}